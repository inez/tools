diff --git a/.gitignore b/.gitignore
index f0a19a9..b012fe8 100644
--- a/.gitignore
+++ b/.gitignore
@@ -5,6 +5,7 @@
 .DS_Store
 .deploy
 
+sftp-config.json
 
 cpp/build
 cpp/contrib/
diff --git a/js/api/ParserService.js b/js/api/ParserService.js
index e6c7496..58826ad 100644
--- a/js/api/ParserService.js
+++ b/js/api/ParserService.js
@@ -25,7 +25,8 @@ var express = require('express'),
 	spawn = childProc.spawn,
 	cluster = require('cluster'),
 	fs = require('fs'),
-	path = require('path');
+	path = require('path'),
+	newrelic;
 
 // local includes
 var mp = '../lib/';
@@ -67,6 +68,10 @@ var interwikiRE;
  */
 var parsoidConfig = new ParsoidConfig( localSettings, null );
 
+if ( parsoidConfig.newRelic ) {
+	newrelic = require('newrelic');
+}
+
 /**
  * The serializer to use for the web requests.
  * @property {Function} Serializer
@@ -356,6 +361,11 @@ app.use(express.favicon(path.join(__dirname, "favicon.ico")));
 app.use(express.bodyParser({maxFieldsSize: 15 * 1024 * 1024}));
 
 app.get('/', function(req, res){
+	// Ignore root in New Relic metrics
+	if ( newrelic ) {
+		newrelic.setIgnoreTransaction(true);
+	}
+
 	res.write('<html><body>\n');
 	res.write('<h3>Welcome to the alpha test web service for the ' +
 		'<a href="http://www.mediawiki.org/wiki/Parsoid">Parsoid project</a>.</h3>\n');
@@ -402,13 +412,13 @@ function defaultParams( req, res, next ) {
 }
 
 function interParams( req, res, next ) {
-	res.locals.iwp = req.params[0];
+	res.locals.apiSource = req.params[0];
 	res.locals.pageName = req.params[1];
 	next();
 }
 
 function parserEnvMw( req, res, next ) {
-	MWParserEnvironment.getParserEnv( parsoidConfig, null, res.locals.iwp, res.locals.pageName, req.headers.cookie, function ( err, env ) {
+	MWParserEnvironment.getParserEnv( parsoidConfig, null, res.locals.apiSource || res.locals.iwp, res.locals.pageName, req.headers.cookie, function ( err, env ) {
 		env.errCB = function ( e ) {
 			e = new ParserError(
 				e.message,
@@ -418,7 +428,7 @@ function parserEnvMw( req, res, next ) {
 			next( e );
 		};
 		if ( err ) {
-			return env.errCb( err );
+			return env.errCB( err );
 		}
 		res.locals.env = env;
 		next();
@@ -573,7 +583,12 @@ app.post(/\/_rtform\/(.*)/, defaultParams, parserEnvMw, function ( req, res ) {
 
 function html2wt( req, res, html ) {
 	var env = res.locals.env;
-	env.page.id = req.body.oldid || null;
+	if ( req.body.oldwt ) {
+		env.setPageSrcInfo( req.body.oldwt );
+		env.page.id = null;
+	} else {
+		env.page.id = req.body.oldid || null;
+	}
 
 	var doc;
 	try {
@@ -602,13 +617,13 @@ function html2wt( req, res, html ) {
 
 function wt2html( req, res, wt ) {
 	var env = res.locals.env;
-	var prefix = res.locals.iwp;
+	var apiSource = res.locals.apiSource;
 	var target = env.resolveTitle( env.normalizeTitle( env.page.name ), '' );
 
 	// Set the timeout to 900 seconds..
 	req.connection.setTimeout( 900 * 1000 );
 
-	console.log( 'starting parsing of ' + prefix + ':' + target );
+	console.log( 'starting parsing of ' + apiSource + ':' + target );
 
 	if ( env.conf.parsoid.allowCORS ) {
 		// allow cross-domain requests (CORS) so that parsoid service
@@ -620,31 +635,24 @@ function wt2html( req, res, wt ) {
 	var tmpCb, oldid = null;
 	if ( wt ) {
 		wt = wt.replace( /\r/g, '' );
-		tmpCb = function ( err, src_and_metadata ) {
-			if ( err ) {
-				env.errCB( err );
-				return;
-			}
-
-			var parser = Util.getParserPipeline( env, 'text/x-mediawiki/full' );
-			parser.on( 'document', function ( document ) {
-				res.setHeader( 'Content-Type', 'text/html; charset=UTF-8' );
-				// Don't cache requests when wt is set in case somebody uses
-				// GET for wikitext parsing
-				res.setHeader( 'Cache-Control', 'private,no-cache,s-maxage=0' );
-				sendRes( req.body.body ? document.body : document );
-			});
+		var parser = Util.getParserPipeline( env, 'text/x-mediawiki/full' );
+		parser.on( 'document', function ( document ) {
+			res.setHeader( 'Content-Type', 'text/html; charset=UTF-8' );
+			// Don't cache requests when wt is set in case somebody uses
+			// GET for wikitext parsing
+			res.setHeader( 'Cache-Control', 'private,no-cache,s-maxage=0' );
+			sendRes( req.body.body ? document.body : document );
+		});
 
-			// Set the source
-			env.setPageSrcInfo( src_and_metadata );
+		// Set the source
+		env.setPageSrcInfo( wt );
 
-			try {
-				parser.processToplevelDoc( wt );
-			} catch ( e ) {
-				env.errCB( e );
-				return;
-			}
-		};
+		try {
+			parser.processToplevelDoc( wt );
+		} catch ( e ) {
+			env.errCB( e );
+			return;
+		}
 	} else {
 		if ( req.query.oldid ) {
 			oldid = req.query.oldid;
@@ -670,24 +678,25 @@ function wt2html( req, res, wt ) {
 
 				// Redirect to oldid
 				res.redirect( req.path + "?oldid=" + env.page.meta.revision.revid );
-				console.warn( "redirected " + prefix + ':' + target + " to revision " + env.page.meta.revision.revid );
+				console.warn( "redirected " + apiSource + ':' + target + " to revision " + env.page.meta.revision.revid );
 			};
 		}
+		var tpr = new TemplateRequest( env, target, oldid );
+		tpr.once( 'src', tmpCb );
 	}
 
-	var tpr = new TemplateRequest( env, target, oldid );
-	tpr.once( 'src', tmpCb );
-
 	function sendRes( doc ) {
 		var out = DU.serializeNode( doc );
 		res.setHeader( 'X-Parsoid-Performance', env.getPerformanceHeader() );
 		res.end( out );
-		console.warn( "completed parsing of " + prefix + ':' + target + " in " + env.performance.duration + " ms" );
+		console.warn( "completed parsing of " + apiSource + ':' + target + " in " + env.performance.duration + " ms" );
 	}
 }
 
+// pattern for all routes that do not begin with _
+var patternForApiUriOrPrefix = '^[/_](.+)/(.*)';
 // Regular article parsing
-app.get( new RegExp( '/(' + getInterwikiRE() + ')/(.*)' ), interParams, parserEnvMw, function(req, res) {
+app.get( new RegExp( patternForApiUriOrPrefix ), interParams, parserEnvMw, function(req, res) {
 	var env = res.locals.env;
 
 	// TODO gwicke: re-enable this when actually using Varnish
@@ -701,7 +710,7 @@ app.get( new RegExp( '/(' + getInterwikiRE() + ')/(.*)' ), interParams, parserEn
 });
 
 // Regular article serialization using POST
-app.post( new RegExp( '/(' + getInterwikiRE() + ')/(.*)' ), interParams, parserEnvMw, function ( req, res ) {
+app.post( new RegExp( patternForApiUriOrPrefix ), interParams, parserEnvMw, function ( req, res ) {
 
 	// parse html or wt
 	if ( req.body.wt ) {
@@ -758,4 +767,3 @@ app.use( express.limit( '15mb' ) );
 console.log( ' - ' + instanceName + ' ready' );
 
 module.exports = app;
-
diff --git a/js/lib/ext.Gallery.js b/js/lib/ext.Gallery.js
new file mode 100644
index 0000000..3b2bbd9
--- /dev/null
+++ b/js/lib/ext.Gallery.js
@@ -0,0 +1,143 @@
+"use strict";
+
+var Util = require( './mediawiki.Util.js' ).Util,
+	coreutil = require('util'),
+	ExtensionHandler = require('./ext.core.ExtensionHandler.js').ExtensionHandler,
+	defines = require('./mediawiki.parser.defines.js'),
+	KV = defines.KV,
+	SelfclosingTagTk = defines.SelfclosingTagTk,
+	TagTk = defines.TagTk,
+	EndTagTk = defines.EndTagTk,
+	async = require('async');
+
+var Gallery = function() {
+};
+
+// Inherit functionality from ExtensionHandler
+coreutil.inherits(Gallery, ExtensionHandler);
+
+Gallery.prototype.handleGallery = function(manager, pipelineOpts, galleryToken, cb) {
+	cb({ 'async': true });
+
+	this.manager = manager;
+	this.pipelineOpts = pipelineOpts;
+	this.galleryToken = galleryToken;
+	this.cb = cb;
+
+	var lines = this._getLines(galleryToken);
+
+	this._processLines(lines, this._processLinesHandler.bind(this));
+};
+
+Gallery.prototype._getLines = function(galleryToken) {
+	var outerSrc = galleryToken.getAttribute('source'),
+		tagWidths = galleryToken.dataAttribs.tagWidths,
+		innerSrc = outerSrc.substring(tagWidths[0], outerSrc.length - tagWidths[1]);
+
+	var tsr = galleryToken.dataAttribs.tsr;
+
+	this.offset = tagWidths[0] + tsr[0]
+
+	return innerSrc.split('\n');
+};
+
+Gallery.prototype._processLines = function(lines, callback) {
+	async.map(lines, this._processLine.bind(this), callback);
+};
+
+Gallery.prototype._processLinesHandler = function(err, results) {
+	var da = Util.clone(this.galleryToken.dataAttribs),
+		galleryOpts = Util.KVtoHash(this.galleryToken.getAttribute('options')),
+		dataMw = { 'name': 'gallery', 'attrs': galleryOpts },
+		tokens = [],
+		i;
+	da.stx = undefined;
+	tokens.push(new defines.TagTk('div', [
+		new KV('typeof', 'mw:Extension/Gallery'),
+		new KV('data-mw', JSON.stringify(dataMw))
+	], da));
+	for(i = 0; i < results.length; i++) {
+		tokens = tokens.concat(results[i]);
+	}
+	tokens.push(new defines.EndTagTk('div'));
+	this.cb({ 'tokens': tokens, 'async': false });
+};
+
+Gallery.prototype._processLine = function(line, callback) {
+	var hasNamespace, wt;
+
+//	this.offset += 1;
+
+	if(line.trim() === '') {
+		// Usually first and last lines are empty
+		this.offset += line.length + 1;
+		callback(null, this._createPlaceholder(line));
+	} else {
+		hasNamespace = !!line.match(/^[^|]*:/)
+		wt = line;
+		if(!hasNamespace) {
+			wt = 'Image:' + wt;
+			this.offset -= 6;
+		}
+		wt = '[[' + wt + '|thumb|none]]';
+		this.offset -= 2;
+		this._processInPipeline(
+			wt,
+			this._processInPipelineHandler.bind(this, line, hasNamespace, callback)
+		);
+		if(!hasNamespace) {
+			this.offset += 6;
+		}
+		this.offset += 2;
+		this.offset += line.length + 1;
+	}
+};
+
+// TODO: Should be defined as a static?
+Gallery.prototype._createPlaceholder = function(src){
+	return [
+		new SelfclosingTagTk('meta', [new KV('typeof', 'mw:Placeholder')], { 'src': src })
+	];
+};
+
+// TODO: Should be defined as a static?
+Gallery.prototype._createDOMFragment = function(src){
+	return [
+		new TagTk( 'div', [ { 'k': 'typeof', 'v': 'mw:DOMFragment' } ], { 'html': src } ),
+		new EndTagTk( 'div' )
+	];
+};
+
+Gallery.prototype._processInPipeline = function(src, callback) {
+	var pipeline = this.manager.pipeFactory.getPipeline(
+		'text/x-mediawiki/full', {
+			//isInclude: true,
+			//wrapTemplates: false,
+			//inBlockToken: true
+		}
+	);
+
+	pipeline.setSourceOffsets(
+		this.offset,
+		this.offset + src.length
+	);
+
+	pipeline.addListener('document', callback);
+	pipeline.process(src);
+};
+
+Gallery.prototype._processInPipelineHandler = function(line, hasNamespace, callback, doc) {
+	var dataParsoid;
+	if(doc.body.childNodes.length !== 1 || doc.body.firstChild.getAttribute('typeof') !== 'mw:Image/Thumb') {
+		callback(null, this._createPlaceholder(line));
+	} else {
+		dataParsoid = JSON.parse(doc.body.firstChild.getAttribute('data-parsoid'));
+		dataParsoid.hasNamespace = hasNamespace;
+		doc.body.firstChild.setAttribute('data-parsoid', JSON.stringify(dataParsoid));
+		callback(null, this._createDOMFragment(doc.body.innerHTML));
+	}
+};
+
+if (typeof module === "object") {
+	module.exports.Gallery = Gallery;
+}
\ No newline at end of file
diff --git a/js/lib/ext.core.ExtensionHandler.js b/js/lib/ext.core.ExtensionHandler.js
index d9194cc..a546d34 100644
--- a/js/lib/ext.core.ExtensionHandler.js
+++ b/js/lib/ext.core.ExtensionHandler.js
@@ -27,6 +27,10 @@ function ExtensionHandler(manager, options) {
 		"references": references.handleReferences.bind(references, manager, options)
 	};
 
+	if ( manager.env.conf.parsoid.useNativeGallery ) {
+		this.nativeExtHandlers.gallery = nativeExts.gallery.handleGallery.bind(nativeExts.gallery, manager, options);
+	}
+
 	// Extension content expansion
 	manager.addTransform( this.onExtension.bind(this), "ExtensionHandler:onExtension",
 			this.rank, 'tag', 'extension' );
diff --git a/js/lib/ext.core.LinkHandler.js b/js/lib/ext.core.LinkHandler.js
index a410c1a..26de8b1 100644
--- a/js/lib/ext.core.LinkHandler.js
+++ b/js/lib/ext.core.LinkHandler.js
@@ -15,14 +15,16 @@ var PegTokenizer = require('./mediawiki.tokenizer.peg.js').PegTokenizer,
 	Sanitizer = sanitizerLib.Sanitizer,
 	SanitizerConstants = sanitizerLib.SanitizerConstants,
 	defines = require('./mediawiki.parser.defines.js'),
-	DU = require('./mediawiki.DOMUtils.js').DOMUtils;
+	DU = require('./mediawiki.DOMUtils.js').DOMUtils,
+	asyncLib = require('async');
 // define some constructor shortcuts
 var KV = defines.KV,
     EOFTk = defines.EOFTk,
     TagTk = defines.TagTk,
     SelfclosingTagTk = defines.SelfclosingTagTk,
     EndTagTk = defines.EndTagTk,
-	ImageInfoRequest = require( './mediawiki.ApiRequest.js' ).ImageInfoRequest;
+	ImageInfoRequest = require( './mediawiki.ApiRequest.js' ).ImageInfoRequest,
+	PhotoAttributionRequest = require( './mediawiki.ApiRequest.js' ).PhotoAttributionRequest;
 
 function WikiLinkHandler( manager, options ) {
 	this.manager = manager;
@@ -811,16 +813,17 @@ WikiLinkHandler.prototype.renderFile = function (token, frame, cb, target)
 	}
 
 	// Handle a response to an imageinfo API request.
-	function handleResponse( linkTitle, err, data ) {
-		if (err || !data) {
+	function handleResponse( linkTitle, err, results ) {
+		if (err || !results) {
 			// FIXME gwicke: Handle this error!!
 			cb ({tokens: [new SelfclosingTagTk('meta',
 						[new KV('typeof', 'mw:Placeholder')], token.dataAttribs)]});
 			return;
 		}
-		var	dims, image, info, containerName, container, containerClose,
-			dataAttribs,
-			rdfaType = 'mw:Image',
+		var	data = results[0][0],
+			attribution = results[1][0],
+			dims, image, info, containerName, container, containerClose,
+			dataAttribs, rdfaType,
 			iContainerName = hasImageLink ? 'a' : 'span',
 			ns = data.imgns,
 			innerContain = new TagTk( iContainerName, [] ),
@@ -942,6 +945,16 @@ WikiLinkHandler.prototype.renderFile = function (token, frame, cb, target)
 			}
 		}
 
+		// Determine rdfaType
+		switch ( info.mediatype ) {
+			case 'VIDEO':
+				rdfaType = 'mw:Video';
+				break;
+			default:
+				rdfaType = 'mw:Image';
+				break;
+		}
+
 		// If the format is something we *recognize*, add the subtype
 		switch ( oHash.format ) {
 			case 'thumbnail':
@@ -978,10 +991,10 @@ WikiLinkHandler.prototype.renderFile = function (token, frame, cb, target)
 				innerContainClose
 			];
 
+		var dataMw = {};
+
 		if ( caption !== undefined  && !useFigure ) {
-			container.addAttribute( 'data-mw', JSON.stringify( {
-				caption: captionSrc
-			} ) );
+			dataMw.caption = captionSrc;
 		} else if ( caption !== undefined ) {
 			tokens = tokens.concat( [
 				new TagTk( 'figcaption' ),
@@ -990,8 +1003,11 @@ WikiLinkHandler.prototype.renderFile = function (token, frame, cb, target)
 			] );
 		}
 
-		tokens.push( containerClose );
+		dataMw.attribution = attribution;
+
+		container.addAttribute( 'data-mw', JSON.stringify( dataMw ) );
 
+		tokens.push( containerClose );
 		cb( { tokens: tokens } );
 	}
 
@@ -1168,7 +1184,15 @@ WikiLinkHandler.prototype.renderFile = function (token, frame, cb, target)
 			constraints.width = 180;
 		}
 	}
+	var imageInfoRequest = new ImageInfoRequest( env, filename, constraints ),
+		photoAttributionRequest = new PhotoAttributionRequest( env, filename );
+
+	asyncLib.parallel( [
+		imageInfoRequest.once.bind( imageInfoRequest, 'src' ),
+		photoAttributionRequest.once.bind( photoAttributionRequest, 'src' )
+	],  handleResponse.bind( null, linkTitle ) );
 
+	/*
 	var queueKey = filename + JSON.stringify( constraints );
 
 	if ( queueKey in env.pageCache ) {
@@ -1181,6 +1205,7 @@ WikiLinkHandler.prototype.renderFile = function (token, frame, cb, target)
 	}
 
 	env.requestQueue[ queueKey ].once( 'src', handleResponse.bind( null, linkTitle ) );
+	*/
 	cb( { async: true } );
 };
 
diff --git a/js/lib/mediawiki.ApiRequest.js b/js/lib/mediawiki.ApiRequest.js
index 2c5e95d..125750c 100644
--- a/js/lib/mediawiki.ApiRequest.js
+++ b/js/lib/mediawiki.ApiRequest.js
@@ -9,7 +9,8 @@ var request = require('request'),
 	$ = require( './fakejquery' ),
 	qs = require('querystring'),
 	events = require('events'),
-	util = require('util');
+	util = require('util'),
+	url = require('url');
 
 // all revision properties which parsoid is interested in.
 var PARSOID_RVPROP = ('content|ids|timestamp|user|userid|size|sha1|'+
@@ -79,9 +80,21 @@ function ApiRequest ( env, title ) {
 util.inherits(ApiRequest, events.EventEmitter);
 
 ApiRequest.prototype.request = function( options, callback ) {
+	var parsedUrl;
 	// this is a good place to put debugging statements
 	// if you want to watch network requests.
 	//console.log('ApiRequest', options);
+	
+	// Syncval for internal wiki
+	if ( this.env.conf.parsoid.syncval && options.url.indexOf( this.env.conf.parsoid.apiURI ) === 0 ) {
+		parsedUrl = url.parse( options.url, true );
+		parsedUrl.query.syncval = this.env.conf.parsoid.syncval;
+		// "query will only be used if search is absent." - http://nodejs.org/docs/latest/api/url.html
+		delete parsedUrl.search;
+		options.url = url.format( parsedUrl );
+		options.strictSSL = false;
+	}
+
 	return request( options, callback );
 };
 
@@ -695,7 +708,8 @@ function ImageInfoRequest( env, filename, dims ) {
 		imgns = conf.namespaceNames[imgnsid],
 		props = [
 			'size',
-			'url'
+			'url',
+			'mediatype'
 		];
 
 	this.ns = imgns;
@@ -788,6 +802,69 @@ ImageInfoRequest.prototype._handleJSON = function ( error, data ) {
 	}
 };
 
+/**
+ * @class
+ * @extends ApiRequest
+ * @constructor
+ * @param {MWParserEnvironment} env
+ * @param {string} filename
+ */
+function PhotoAttributionRequest( env, filename ) {
+	ApiRequest.call( this, env, null );
+	this.env = env;
+
+	var conf = env.conf.wiki,
+		url = conf.apiURI + '?';
+
+	var apiArgs = {
+		action: 'apiphotoattribution',
+		format: 'json',
+		file: filename
+	};
+
+	url += qs.stringify( apiArgs );
+
+	this.requestOptions = {
+		method: 'GET',
+		followRedirect: true,
+		url: url,
+		timeout: 40 * 1000,
+		headers: {
+			'User-Agent': userAgent,
+			'Connection': 'close'
+		}
+	};
+
+	this.request( this.requestOptions, this._requestCB.bind( this ) );
+}
+
+util.inherits( PhotoAttributionRequest, ApiRequest );
+
+/**
+ * @inheritdoc ApiRequest#_handleJSON
+ */
+PhotoAttributionRequest.prototype._handleJSON = function ( error, data ) {
+	var pagenames, names, namelist, newpages, pages, pagelist, ix;
+
+	if ( error ) {
+		this._processListeners( error, { imgns: this.ns } );
+		return;
+	}
+
+	if ( data ) {
+		this._processListeners( null, data );
+	} else if ( data && data.error ) {
+		if ( data.error.code === 'readapidenied' ) {
+			error = new AccessDeniedError();
+		} else {
+			error = new Error( 'Something happened on the API side. Message: ' + data.error.code + ': ' + data.error.info );
+		}
+		this._processListeners( error, {} );
+	} else {
+		this._processListeners( null, {} );
+	}
+};
+
 if (typeof module === "object") {
 	module.exports.ConfigRequest = ConfigRequest;
 	module.exports.TemplateRequest = TemplateRequest;
@@ -795,6 +872,7 @@ if (typeof module === "object") {
 	module.exports.PHPParseRequest = PHPParseRequest;
 	module.exports.ParsoidCacheRequest = ParsoidCacheRequest;
 	module.exports.ImageInfoRequest = ImageInfoRequest;
+	module.exports.PhotoAttributionRequest = PhotoAttributionRequest;
 	module.exports.DoesNotExistError = DoesNotExistError;
 	module.exports.ParserError = ParserError;
 }
diff --git a/js/lib/mediawiki.ParsoidConfig.js b/js/lib/mediawiki.ParsoidConfig.js
index 59cce1d..b4d1a34 100644
--- a/js/lib/mediawiki.ParsoidConfig.js
+++ b/js/lib/mediawiki.ParsoidConfig.js
@@ -5,7 +5,8 @@
 "use strict";
 
 var $ = require( './fakejquery' ),
-	Cite = require('./ext.Cite.js').Cite;
+	Cite = require('./ext.Cite.js').Cite,
+	Gallery = require('./ext.Gallery.js').Gallery;
 
 var wikipedias = "en|de|fr|nl|it|pl|es|ru|ja|pt|zh|sv|vi|uk|ca|no|fi|cs|hu|ko|fa|id|tr|ro|ar|sk|eo|da|sr|lt|ms|eu|he|sl|bg|kk|vo|war|hr|hi|et|az|gl|simple|nn|la|th|el|new|roa-rup|oc|sh|ka|mk|tl|ht|pms|te|ta|be-x-old|ceb|br|be|lv|sq|jv|mg|cy|lb|mr|is|bs|yo|an|hy|fy|bpy|lmo|pnb|ml|sw|bn|io|af|gu|zh-yue|ne|nds|ku|ast|ur|scn|su|qu|diq|ba|tt|my|ga|cv|ia|nap|bat-smg|map-bms|wa|kn|als|am|bug|tg|gd|zh-min-nan|yi|vec|hif|sco|roa-tara|os|arz|nah|uz|sah|mn|sa|mzn|pam|hsb|mi|li|ky|si|co|gan|glk|ckb|bo|fo|bar|bcl|ilo|mrj|fiu-vro|nds-nl|tk|vls|se|gv|ps|rue|dv|nrm|pag|koi|pa|rm|km|kv|udm|csb|mhr|fur|mt|wuu|lij|ug|lad|pi|zea|sc|bh|zh-classical|nov|ksh|or|ang|kw|so|nv|xmf|stq|hak|ay|frp|frr|ext|szl|pcd|ie|gag|haw|xal|ln|rw|pdc|pfl|krc|crh|eml|ace|gn|to|ce|kl|arc|myv|dsb|vep|pap|bjn|as|tpi|lbe|wo|mdf|jbo|kab|av|sn|cbk-zam|ty|srn|kbd|lo|ab|lez|mwl|ltg|ig|na|kg|tet|za|kaa|nso|zu|rmy|cu|tn|chr|got|sm|bi|mo|bm|iu|chy|ik|pih|ss|sd|pnt|cdo|ee|ha|ti|bxr|om|ks|ts|ki|ve|sg|rn|dz|cr|lg|ak|tum|fj|st|tw|ch|ny|ff|xh|ng|ii|cho|mh|aa|kj|ho|mus|kr|hz";
 
@@ -57,7 +58,8 @@ function ParsoidConfig( localSettings, options ) {
 	// SSS FIXME: Hardcoded right now, but need a generic registration mechanism
 	// for native handlers
 	this.nativeExtensions = {
-		cite: new Cite()
+		cite: new Cite(),
+		gallery: new Gallery()
 	};
 }
 
@@ -154,6 +156,11 @@ ParsoidConfig.prototype.version = 0;
  */
 ParsoidConfig.prototype.storeDataParsoid = false;
 
+/**
+ * @property {boolean} useNativeGallery
+ */
+ParsoidConfig.prototype.useNativeGallery = false;
+
 if (typeof module === "object") {
 	module.exports.ParsoidConfig = ParsoidConfig;
 }
diff --git a/js/lib/mediawiki.WikiConfig.js b/js/lib/mediawiki.WikiConfig.js
index c0759ca..32c0120 100644
--- a/js/lib/mediawiki.WikiConfig.js
+++ b/js/lib/mediawiki.WikiConfig.js
@@ -118,6 +118,13 @@ function WikiConfig( resultConf, prefix, uri ) {
 	for ( var index = 0; index < interwikiKeys.length; index++ ) {
 		var key = interwikimap[index].prefix;
 		this.interwikiMap[key] = interwikimap[index];
+		if (!/$1/.test(this.interwikiMap[key].url)) {
+			// Fix up broken interwiki hrefs that are missing a $1 placeholder
+			// Just append the placeholder at the end.
+			// This makes sure that the InterWikiMatcher below adds one match
+			// group per URI, and that interwiki links work as expected.
+			this.interwikiMap[key].url += '$1';
+		}
 	}
 
 
@@ -438,11 +445,14 @@ WikiConfig.prototype.getMagicPatternMatcher = function ( optionsMap ) {
 	mwlist = [];
 	var first = true;
 	optionsMap.forEach(function( value, option ) {
+		aliases = this._interpolatedMagicWordAliases[option];
+		if ( !aliases ) {
+			return;
+		}
 		if ( !first ) {
 			regexString += '|';
 		}
 		first = false;
-		aliases = this._interpolatedMagicWordAliases[option];
 		regexString += aliases.join( '|' )
 			.replace( /((?:^|\|)(?:[^\$]|\$[^1])*)($|\|)/g, '$1$$1$2' )
 			.replace( /\$1/g, '(.*)' );
diff --git a/js/lib/mediawiki.WikitextSerializer.js b/js/lib/mediawiki.WikitextSerializer.js
index e355af2..8ca34e1 100644
--- a/js/lib/mediawiki.WikitextSerializer.js
+++ b/js/lib/mediawiki.WikitextSerializer.js
@@ -1646,16 +1646,19 @@ WSP.handleImage = function ( node, state, cb ) {
 	currentOpt = {};
 	switch ( rel ) {
 		case 'mw:Image/Thumb':
+		case 'mw:Video/Thumb':
 			currentOpt.ck = 'thumbnail';
 			currentOpt.ak = mwAliases.img_thumbnail.last();
 			break;
 
 		case 'mw:Image/Frame':
+		case 'mw:Video/Frame':
 			currentOpt.ck = 'framed';
 			currentOpt.ak = mwAliases.img_framed.last();
 			break;
 
 		case 'mw:Image/Frameless':
+		case 'mw:Video/Frameless':
 			currentOpt.ck = 'frameless';
 			currentOpt.ak = mwAliases.img_frameless.last();
 			break;
@@ -2085,6 +2088,10 @@ WSP.genContentSpanTypes = {
 	'mw:Image/Frameless': 1,
 	'mw:Image/Frame': 1,
 	'mw:Image/Thumb': 1,
+	'mw:Video': 1,
+	'mw:Video/Frameless': 1,
+	'mw:Video/Frame': 1,
+	'mw:Video/Thumb': 1,
 	'mw:Entity': 1,
 	'mw:DiffMarker': 1
 };
@@ -2786,7 +2793,7 @@ WSP.tagHandlers = {
 						}
 					}
 					emitEndTag('</nowiki>', node, state, cb);
-				} else if ( /(?:^|\s)mw\:Image(\/(Frame|Frameless|Thumb))?/.test(type) ) {
+				} else if ( /(?:^|\s)mw\:(Image|Video)(\/(Frame|Frameless|Thumb))?/.test(type) ) {
 					state.serializer.handleImage( node, state, cb );
 				} else if ( /(?:^|\s)mw\:Entity/.test(type) && node.childNodes.length === 1 ) {
 					// handle a new mw:Entity (not handled by selser) by
@@ -3322,8 +3329,27 @@ WSP._buildExtensionWT = function(state, node, dataMW) {
 		srcParts.push(attrStr);
 	}
 
-	// Serialize body
-	if (!dataMW.body) {
+	if ( state.env.conf.parsoid.useNativeGallery && extName === 'gallery' ) {
+		srcParts.push(">");
+		var results = [], i, wts, wt, dp;
+		for ( var i = 0; i < node.childNodes.length; i++ ) {
+			wts = new WikitextSerializer({
+				env: state.env,
+				extName: extName
+			});
+			wt = wts.serializeDOM(node.childNodes[i]);
+			if(node.childNodes[i].getAttribute('typeof') === 'mw:Image/Thumb') {
+				wt = wt.substr(2,wt.length-15);
+				dp = JSON.parse(node.childNodes[i].getAttribute('data-parsoid'));
+				if(!dp.hasNamespace) {
+					wt = wt.substr(6);
+				}
+			}
+			results.push(wt);
+		}
+		srcParts.push(results.join("\n"));
+		srcParts = srcParts.concat(["</", extName, ">"]);
+	} else if (!dataMW.body) {
 		srcParts.push(" />");
 	} else {
 		srcParts.push(">");
diff --git a/js/lib/mediawiki.parser.environment.js b/js/lib/mediawiki.parser.environment.js
index 10240e8..61f8148 100644
--- a/js/lib/mediawiki.parser.environment.js
+++ b/js/lib/mediawiki.parser.environment.js
@@ -263,7 +263,7 @@ MWParserEnvironment.prototype.setVariable = function( varname, value, options )
  * @param {Error} cb.err
  * @param {MWParserEnvironment} cb.env The finished environment object
  */
-MWParserEnvironment.getParserEnv = function ( parsoidConfig, wikiConfig, prefix, pageName, cookie, cb ) {
+MWParserEnvironment.getParserEnv = function ( parsoidConfig, wikiConfig, apiSource, pageName, cookie, cb ) {
 	if ( !parsoidConfig ) {
 		parsoidConfig = new ParsoidConfig();
 		parsoidConfig.setInterwiki( 'mw', 'http://www.mediawiki.org/w/api.php' );
@@ -281,7 +281,7 @@ MWParserEnvironment.getParserEnv = function ( parsoidConfig, wikiConfig, prefix,
 	}
 
 	// Get that wiki's config
-	env.switchToConfig( prefix, function ( err ) {
+	env.switchToConfig( apiSource, function ( err ) {
 		cb( err, env );
 	} );
 };
@@ -303,6 +303,10 @@ MWParserEnvironment.prototype.getPerformanceHeader = function () {
 	} ).join( '; ' );
 };
 
+MWParserEnvironment.prototype.isApiSourceAUri = function( apiSource ) {
+	return ( /^https?:\/\/(.*)/gi ).test( apiSource );
+};
+
 /**
  * Function that switches to a different configuration for a different wiki.
  * Caches all configs so we only need to get each one once (if we do it right)
@@ -311,46 +315,54 @@ MWParserEnvironment.prototype.getPerformanceHeader = function () {
  * @param {Function} cb
  * @param {Error} cb.err
  */
-MWParserEnvironment.prototype.switchToConfig = function ( prefix, cb ) {
+MWParserEnvironment.prototype.switchToConfig = function ( apiSource, cb ) {
+	var isUri = this.isApiSourceAUri( apiSource );
 
 	function setupWikiConfig(env, apiURI, error, config) {
 		if ( error === null ) {
-			env.conf.wiki = new WikiConfig( config, prefix, apiURI );
-			env.confCache[prefix] = env.conf.wiki;
+			env.conf.wiki = new WikiConfig( config, apiSource, apiURI );
+			env.confCache[apiSource] = env.conf.wiki;
 		}
 
 		cb( error );
 	}
 
-	if (!prefix) {
-		console.error("ERROR: No prefix provided!");
-		cb(new Error("Wiki prefix not provided"));
+	if (!apiSource) {
+		console.error("ERROR: No valid prefix or API URI provided!");
+		cb(new Error("Wiki prefix or API URI not provided"));
 		return;
 	}
 
-	var uri = this.conf.parsoid.interwikiMap[prefix];
-	if (!uri) {
-		// SSS: Ugh! Looks like parser tests use a prefix
-		// that is not part of the interwikiMap -- so we
-		// cannot crash with an error.  Hence defaulting
-		// to enwiki api which is quite odd.  Does the
-		// interwikiMap need updating or is this use-case
-		// valid outside of parserTests??
-		console.error("ERROR: Did not find api uri for " + prefix + "; defaulting to en");
-		uri = this.conf.parsoid.interwikiMap.en;
+	var uri;
+
+	if ( isUri ) {
+		uri = apiSource;
+	} else {
+		uri = this.conf.parsoid.interwikiMap[ apiSource ];
+
+		if (!uri) {
+			// SSS: Ugh! Looks like parser tests use a prefix
+			// that is not part of the interwikiMap -- so we
+			// cannot crash with an error.  Hence defaulting
+			// to enwiki api which is quite odd.  Does the
+			// interwikiMap need updating or is this use-case
+			// valid outside of parserTests??
+			console.error("ERROR: Did not find api uri for " + apiSource + "; defaulting to en");
+			uri = this.conf.parsoid.interwikiMap.en;
+		}
 	}
 
 	this.conf.parsoid.apiURI = uri;
 
-	if ( this.confCache[prefix] ) {
-		this.conf.wiki = this.confCache[prefix];
+	if ( this.confCache[ apiSource ] ) {
+		this.conf.wiki = this.confCache[ apiSource ];
 		cb( null );
-	} else if ( this.conf.parsoid.fetchConfig ) {
+	} else if ( this.conf.parsoid.fetchConfig || isUri ) {
 		var confRequest = new ConfigRequest( uri, this );
 		confRequest.on( 'src', setupWikiConfig.bind(null, this, uri));
 	} else {
 		// Load the config from cached config on disk
-		var localConfigFile = './baseconfig/' + prefix + '.json',
+		var localConfigFile = './baseconfig/' + apiSource + '.json',
 			localConfig = require(localConfigFile);
 
 		if (localConfig && localConfig.query) {
diff --git a/js/package.json b/js/package.json
index 1b556ac..5e0563f 100644
--- a/js/package.json
+++ b/js/package.json
@@ -18,7 +18,8 @@
 		"express": "2.5.x",
 		"html5-entities": "~0.5.0",
 		"html5": "0.3.15",
-		"es6-shim": "git+https://github.com/paulmillr/es6-shim#7dc668687c3a89ed9e7b6d6c6369f0ba8ebf8731"
+		"es6-shim": "git+https://github.com/paulmillr/es6-shim#7dc668687c3a89ed9e7b6d6c6369f0ba8ebf8731",
+		"newrelic": "~1.5.0"
 	},
 	"devDependencies": {
 		"colors": "0.x.x",
diff --git a/js/tests/mockAPI.js b/js/tests/mockAPI.js
index ce1628f..4792919 100644
--- a/js/tests/mockAPI.js
+++ b/js/tests/mockAPI.js
@@ -10,13 +10,16 @@ var IMAGE_DESC_URL = IMAGE_BASE_URL;
 //IMAGE_DESC_URL='http://commons.wikimedia.org/wiki';
 var FILE_PROPS = {
 	'Foobar.jpg': {
-		size: 7881, width: 1941, height: 220, bits: 8, mime: 'image/jpeg'
+		size: 7881, width: 1941, height: 220, bits: 8, mime: 'image/jpeg', mediatype: 'BITMAP'
 	},
 	'Thumb.png': {
-		size: 22589, width: 135, height: 135, bits: 8, mime: 'image/png'
+		size: 22589, width: 135, height: 135, bits: 8, mime: 'image/png', mediatype: 'BITMAP'
 	},
 	'Foobar.svg': {
-		size: 12345, width: 240, height: 180, bits: 24, mime: 'image/svg+xml'
+		size: 12345, width: 240, height: 180, bits: 24, mime: 'image/svg+xml', mediatype: 'BITMAP'
+	},
+	'Foobar.mov': {
+		size: 12345, width: 640, height: 480, bits: 8, mime: 'video/quicktime', mediatype: 'VIDEO'
 	}
 };
 
@@ -36,11 +39,14 @@ function sanitizeHTMLAttribute( text ) {
 
 var fnames = {
 		'Image:Foobar.jpg': 'Foobar.jpg',
-		'File:Foobar.jpg': 'Foobar.jpg'
+		'File:Foobar.jpg': 'Foobar.jpg',
+		'Image:Foobar.mov': 'Foobar.mov',
+		'File:Foobar.mov': 'Foobar.mov'
 	},
 
 	pnames = {
-		'Image:Foobar.jpg': 'File:Foobar.jpg'
+		'Image:Foobar.jpg': 'File:Foobar.jpg',
+		'Image:Foobar.mov': 'File:Foobar.mov'
 	},
 
 	formatters = {
@@ -122,7 +128,8 @@ var fnames = {
 						height: height,
 						width: width,
 						url: baseurl,
-						descriptionurl: durl
+						descriptionurl: durl,
+						mediatype: props.mediatype
 					} ]
 				},
 				response = {
@@ -154,6 +161,12 @@ var fnames = {
 
 			response.query.pages['1'] = imageinfo;
 			cb( null, response );
+		},
+		apiphotoattribution: function ( body, cb ) {
+			cb( null, {
+				'username': 'Foo',
+				'avatar': 'Foo.png'
+			} );
 		}
 	},
 
diff --git a/js/tests/parserTests.txt b/js/tests/parserTests.txt
index 5674973..b548f76 100644
--- a/js/tests/parserTests.txt
+++ b/js/tests/parserTests.txt
@@ -154,7 +154,6 @@ Blank input
 !! result
 !! end
 
-
 !! test
 Simple paragraph
 !! input
@@ -8907,7 +8906,7 @@ parsoid=wt2html
 !! input
 [[Image:foobar.jpg]]
 !! result
-<p><span class="mw-default-size" typeof="mw:Image"><a href="File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></a></span>
+<p><span class="mw-default-size" typeof="mw:Image" data-mw="{&quot;attribution&quot;:{&quot;username&quot;:&quot;Foo&quot;,&quot;avatar&quot;:&quot;Foo.png&quot;}}"><a href="File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></a></span>
 </p>
 !! end
 
@@ -8929,7 +8928,7 @@ parsoid
 !! input
 [[File:Foobar.jpg]]
 !! result
-<p><span class="mw-default-size" typeof="mw:Image"><a href="File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></a></span>
+<p><span class="mw-default-size" typeof="mw:Image" data-mw="{&quot;attribution&quot;:{&quot;username&quot;:&quot;Foo&quot;,&quot;avatar&quot;:&quot;Foo.png&quot;}}"><a href="File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></a></span>
 </p>
 !! end
 
@@ -8951,7 +8950,7 @@ parsoid
 !! input
 [[File:Foobar.jpg|right]]
 !! result
-<figure class="mw-default-size mw-halign-right" typeof="mw:Image"><a href="File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></a></figure>
+<figure class="mw-default-size mw-halign-right" typeof="mw:Image" data-mw="{&quot;attribution&quot;:{&quot;username&quot;:&quot;Foo&quot;,&quot;avatar&quot;:&quot;Foo.png&quot;}}"><a href="File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></a></figure>
 !! end
 
 !! test
@@ -8972,7 +8971,7 @@ parsoid
 !! input
 [[File:Foobar.jpg|right|Caption text]]
 !! result
-<figure class="mw-default-size mw-halign-right" typeof="mw:Image"><a href="File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></a><figcaption>Caption text</figcaption></figure>
+<figure class="mw-default-size mw-halign-right" typeof="mw:Image" data-mw="{&quot;attribution&quot;:{&quot;username&quot;:&quot;Foo&quot;,&quot;avatar&quot;:&quot;Foo.png&quot;}}"><a href="File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></a><figcaption>Caption text</figcaption></figure>
 !! end
 
 !! test
@@ -8993,7 +8992,7 @@ parsoid=wt2html
 !! input
 [[File:Foobar.jpg|right||Caption text]]
 !! result
-<figure class="mw-default-size mw-halign-right" typeof="mw:Image"><a href="File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></a><figcaption>Caption text</figcaption></figure>
+<figure class="mw-default-size mw-halign-right" typeof="mw:Image" data-mw="{&quot;attribution&quot;:{&quot;username&quot;:&quot;Foo&quot;,&quot;avatar&quot;:&quot;Foo.png&quot;}}"><a href="File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></a><figcaption>Caption text</figcaption></figure>
 !! end
 
 !! test
@@ -9014,7 +9013,7 @@ parsoid
 !! input
 [[File:Foobar.jpg|{{image_attribs}}]]
 !! result
-<figure class="mw-default-size mw-halign-right" typeof="mw:Image"><a href="File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></a><figcaption>Caption text</figcaption></figure>
+<figure class="mw-default-size mw-halign-right" typeof="mw:Image" data-mw="{&quot;attribution&quot;:{&quot;username&quot;:&quot;Foo&quot;,&quot;avatar&quot;:&quot;Foo.png&quot;}}"><a href="File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></a><figcaption>Caption text</figcaption></figure>
 !! end
 
 !! test
@@ -9042,9 +9041,9 @@ parsoid
 123[[File:Foobar.jpg|right]]456
 123[[File:Foobar.jpg|thumb]]456
 !! result
-<p>123<span class="mw-default-size" typeof="mw:Image"><a href="File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></a></span>456</p>
-123<figure class="mw-default-size mw-halign-right" typeof="mw:Image"><a href="File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></a></figure>456
-123<figure class="mw-default-size" typeof="mw:Image/Thumb"><a href="File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/thumb/3/3a/Foobar.jpg/180px-Foobar.jpg" height="20" width="180"></a></figure>456
+<p>123<span class="mw-default-size" typeof="mw:Image" data-mw="{&quot;attribution&quot;:{&quot;username&quot;:&quot;Foo&quot;,&quot;avatar&quot;:&quot;Foo.png&quot;}}"><a href="File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></a></span>456</p>
+123<figure class="mw-default-size mw-halign-right" typeof="mw:Image" data-mw="{&quot;attribution&quot;:{&quot;username&quot;:&quot;Foo&quot;,&quot;avatar&quot;:&quot;Foo.png&quot;}}"><a href="File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></a></figure>456
+123<figure class="mw-default-size" typeof="mw:Image/Thumb" data-mw="{&quot;attribution&quot;:{&quot;username&quot;:&quot;Foo&quot;,&quot;avatar&quot;:&quot;Foo.png&quot;}}"><a href="File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/thumb/3/3a/Foobar.jpg/180px-Foobar.jpg" height="20" width="180"></a></figure>456
 !! end
 
 !! test
@@ -9065,7 +9064,7 @@ parsoid
 !! input
 [[File:Foobar.jpg|right|Caption1 - ignored|[[Caption2]] - ignored|Caption3 - accepted]]
 !! result
-<figure class="mw-default-size mw-halign-right" typeof="mw:Image"><a href="File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></a><figcaption>Caption3 - accepted</figcaption></figure>
+<figure class="mw-default-size mw-halign-right" typeof="mw:Image" data-mw="{&quot;attribution&quot;:{&quot;username&quot;:&quot;Foo&quot;,&quot;avatar&quot;:&quot;Foo.png&quot;}}"><a href="File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></a><figcaption>Caption3 - accepted</figcaption></figure>
 !! end
 
 !! test
@@ -9092,9 +9091,9 @@ parsoid
 [[File:Foobar.jpg|right|200px|Caption]]
 [[File:Foobar.jpg|right|Caption|200px]]
 !! result
-<figure class="mw-halign-right" typeof="mw:Image"><a href="File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/thumb/3/3a/Foobar.jpg/200px-Foobar.jpg" height="23" width="200"></a><figcaption>Caption</figcaption></figure>
-<figure class="mw-halign-right" typeof="mw:Image"><a href="File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/thumb/3/3a/Foobar.jpg/200px-Foobar.jpg" height="23" width="200"></a><figcaption>Caption</figcaption></figure>
-<figure class="mw-halign-right" typeof="mw:Image"><a href="File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/thumb/3/3a/Foobar.jpg/200px-Foobar.jpg" height="23" width="200"></a><figcaption>Caption</figcaption></figure>
+<figure class="mw-halign-right" typeof="mw:Image" data-mw="{&quot;attribution&quot;:{&quot;username&quot;:&quot;Foo&quot;,&quot;avatar&quot;:&quot;Foo.png&quot;}}"><a href="File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/thumb/3/3a/Foobar.jpg/200px-Foobar.jpg" height="23" width="200"></a><figcaption>Caption</figcaption></figure>
+<figure class="mw-halign-right" typeof="mw:Image" data-mw="{&quot;attribution&quot;:{&quot;username&quot;:&quot;Foo&quot;,&quot;avatar&quot;:&quot;Foo.png&quot;}}"><a href="File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/thumb/3/3a/Foobar.jpg/200px-Foobar.jpg" height="23" width="200"></a><figcaption>Caption</figcaption></figure>
+<figure class="mw-halign-right" typeof="mw:Image" data-mw="{&quot;attribution&quot;:{&quot;username&quot;:&quot;Foo&quot;,&quot;avatar&quot;:&quot;Foo.png&quot;}}"><a href="File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/thumb/3/3a/Foobar.jpg/200px-Foobar.jpg" height="23" width="200"></a><figcaption>Caption</figcaption></figure>
 !! end
 
 !! test
@@ -9115,7 +9114,7 @@ parsoid
 !! input
 [[File:Foobar.jpg|link=Main Page]]
 !! result
-<p><span class="mw-default-size" typeof="mw:Image"><a href="Main_Page"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></a></span></p>
+<p><span class="mw-default-size" typeof="mw:Image" data-mw="{&quot;attribution&quot;:{&quot;username&quot;:&quot;Foo&quot;,&quot;avatar&quot;:&quot;Foo.png&quot;}}"><a href="Main_Page"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></a></span></p>
 !! end
 
 !! test
@@ -9137,7 +9136,7 @@ parsoid
 !! input
 [[File:Foobar.jpg|link=http://example.com/]]
 !! result
-<p><span class="mw-default-size" typeof="mw:Image"><a href="http://example.com/"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></a></span></p>
+<p><span class="mw-default-size" typeof="mw:Image" data-mw="{&quot;attribution&quot;:{&quot;username&quot;:&quot;Foo&quot;,&quot;avatar&quot;:&quot;Foo.png&quot;}}"><a href="http://example.com/"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></a></span></p>
 !! end
 
 !! test
@@ -9159,7 +9158,7 @@ parsoid
 !! input
 [[File:Foobar.jpg|link=//example.com/]]
 !! result
-<p><span class="mw-default-size" typeof="mw:Image"><a href="//example.com/"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></a></span></p>
+<p><span class="mw-default-size" typeof="mw:Image" data-mw="{&quot;attribution&quot;:{&quot;username&quot;:&quot;Foo&quot;,&quot;avatar&quot;:&quot;Foo.png&quot;}}"><a href="//example.com/"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></a></span></p>
 !! end
 
 !! test
@@ -9224,7 +9223,7 @@ parsoid
 !! input
 [[File:Foobar.jpg|link=]]
 !! result
-<p><span class="mw-default-size" typeof="mw:Image"><span><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></span></span></p>
+<p><span class="mw-default-size" typeof="mw:Image" data-mw="{&quot;attribution&quot;:{&quot;username&quot;:&quot;Foo&quot;,&quot;avatar&quot;:&quot;Foo.png&quot;}}"><span><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></span></span></p>
 !! end
 
 !! test
@@ -9245,7 +9244,7 @@ parsoid
 !! input
 [[File:Foobar.jpg|link=Main Page|Title]]
 !! result
-<p><span class="mw-default-size" typeof="mw:Image" data-mw='{"caption":"Title"}'><a href="Main_Page"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></a></span></p>
+<p><span class="mw-default-size" typeof="mw:Image" data-mw="{&quot;caption&quot;:&quot;Title&quot;,&quot;attribution&quot;:{&quot;username&quot;:&quot;Foo&quot;,&quot;avatar&quot;:&quot;Foo.png&quot;}}"><a href="Main_Page"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></a></span></p>
 !! end
 
 !! test
@@ -9266,7 +9265,7 @@ parsoid
 !! input
 [[File:Foobar.jpg|link=http://example.com/|Title]]
 !! result
-<p><span class="mw-default-size" typeof="mw:Image" data-mw='{"caption":"Title"}'><a href="http://example.com/"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></a></span></p>
+<p><span class="mw-default-size" typeof="mw:Image" data-mw="{&quot;caption&quot;:&quot;Title&quot;,&quot;attribution&quot;:{&quot;username&quot;:&quot;Foo&quot;,&quot;avatar&quot;:&quot;Foo.png&quot;}}"><a href="http://example.com/"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="220" width="1941"></a></span></p>
 !! end
 
 !! test
@@ -9658,7 +9657,7 @@ parsoid
 [[Image:Foobar.jpg|50px|middle]]
 !! result
 <p>
-<span class="mw-valign-middle" typeof="mw:Image">
+<span class="mw-valign-middle" typeof="mw:Image" data-mw="{&quot;attribution&quot;:{&quot;username&quot;:&quot;Foo&quot;,&quot;avatar&quot;:&quot;Foo.png&quot;}}">
 <a href="File:Foobar.jpg">
 <img resource="./File:Foobar.jpg" src="//example.com/images/thumb/3/3a/Foobar.jpg/50px-Foobar.jpg" height="6" width="50">
 </a>
@@ -9674,7 +9673,7 @@ parsoid
 [[Image:Foobar.jpg|500x10px|baseline|caption]]
 !! result
 <p>
-<span class="mw-valign-baseline" typeof="mw:Image" data-mw="{&quot;caption&quot;:&quot;caption&quot;}">
+<span class="mw-valign-baseline" typeof="mw:Image" data-mw="{&quot;caption&quot;:&quot;caption&quot;,&quot;attribution&quot;:{&quot;username&quot;:&quot;Foo&quot;,&quot;avatar&quot;:&quot;Foo.png&quot;}}">
 <a href="File:Foobar.jpg">
 <img resource="./File:Foobar.jpg" src="//example.com/images/thumb/3/3a/Foobar.jpg/89px-Foobar.jpg" height="10" width="89">
 </a>
@@ -9690,7 +9689,7 @@ parsoid
 [[Image:Foobar.jpg|50px|border|caption]]
 !! result
 <p>
-<span class="mw-image-border" typeof="mw:Image" data-mw="{&quot;caption&quot;:&quot;caption&quot;}">
+<span class="mw-image-border" typeof="mw:Image" data-mw="{&quot;caption&quot;:&quot;caption&quot;,&quot;attribution&quot;:{&quot;username&quot;:&quot;Foo&quot;,&quot;avatar&quot;:&quot;Foo.png&quot;}}">
 <a href="File:Foobar.jpg">
 <img resource="./File:Foobar.jpg" src="//example.com/images/thumb/3/3a/Foobar.jpg/50px-Foobar.jpg" height="6" width="50">
 </a>
@@ -9735,7 +9734,7 @@ parsoid
 !! input
 [[Image:Foobar.jpg|500x50px|frame|caption]]
 !! result
-<figure typeof="mw:Image/Frame">
+<figure typeof="mw:Image/Frame" data-mw="{&quot;attribution&quot;:{&quot;username&quot;:&quot;Foo&quot;,&quot;avatar&quot;:&quot;Foo.png&quot;}}">
 <a href="File:Foobar.jpg">
 <img resource="./File:Foobar.jpg" src="//example.com/images/thumb/3/3a/Foobar.jpg/442px-Foobar.jpg" height="50" width="442" />
 </a>
@@ -9766,7 +9765,7 @@ parsoid
 [[Image:Foobar.jpg|frameless|500x50px|border|caption]]
 !! result
 <p>
-<span class="mw-image-border" typeof="mw:Image/Frameless" data-mw="{&quot;caption&quot;:&quot;caption&quot;}">
+<span class="mw-image-border" typeof="mw:Image/Frameless" data-mw="{&quot;caption&quot;:&quot;caption&quot;,&quot;attribution&quot;:{&quot;username&quot;:&quot;Foo&quot;,&quot;avatar&quot;:&quot;Foo.png&quot;}}">
 <a href="File:Foobar.jpg">
 <img resource="./File:Foobar.jpg" src="//example.com/images/thumb/3/3a/Foobar.jpg/442px-Foobar.jpg" height="50" width="442" />
 </a>
@@ -9796,7 +9795,7 @@ parsoid
 !! input
 [[Image:Foobar.jpg|thumb|200px|This caption has a {{echo|transclusion}} in it.]]
 !! result
-<figure typeof="mw:Image/Thumb"><a href="./File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/thumb/3/3a/Foobar.jpg/200px-Foobar.jpg" height="23" width="200"></a><figcaption>This caption has a <span about="#mwt1" typeof="mw:Transclusion" data-mw="{&quot;parts&quot;:[{&quot;template&quot;:{&quot;target&quot;:{&quot;wt&quot;:&quot;echo&quot;,&quot;href&quot;:&quot;./Template:Echo&quot;},&quot;params&quot;:{&quot;1&quot;:{&quot;wt&quot;:&quot;transclusion&quot;}},&quot;i&quot;:0}}]}">transclusion</span> in it.</figcaption></figure>
+<figure typeof="mw:Image/Thumb" data-mw='{"attribution":{"username":"Foo","avatar":"Foo.png"}}'><a href="./File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/thumb/3/3a/Foobar.jpg/200px-Foobar.jpg" height="23" width="200"></a><figcaption>This caption has a <span about="#mwt1" typeof="mw:Transclusion" data-mw="{&quot;parts&quot;:[{&quot;template&quot;:{&quot;target&quot;:{&quot;wt&quot;:&quot;echo&quot;,&quot;href&quot;:&quot;./Template:Echo&quot;},&quot;params&quot;:{&quot;1&quot;:{&quot;wt&quot;:&quot;transclusion&quot;}},&quot;i&quot;:0}}]}">transclusion</span> in it.</figcaption></figure>
 !! end
 
 !! test
@@ -9809,10 +9808,34 @@ foo
 bar
 !! result
 <p>foo</p>
-<figure typeof="mw:Image/Thumb"><a href="File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="23" width="200"></a><figcaption>This caption has a <center>unbalanced tag in it.</center></figcaption></figure>
+<figure typeof="mw:Image/Thumb" data-mw='{"attribution":{"username":"Foo","avatar":"Foo.png"}}'><a href="File:Foobar.jpg"><img resource="./File:Foobar.jpg" src="//example.com/images/3/3a/Foobar.jpg" height="23" width="200"></a><figcaption>This caption has a <center>unbalanced tag in it.</center></figcaption></figure>
 <p>bar</p>
 !! end
 
+###
+### Videos
+###
+
+!! test
+Inline video
+!! options
+parsoid
+!! input
+[[File:Foobar.mov]]
+!! result
+<p><span class="mw-default-size" typeof="mw:Video" data-mw="{&quot;attribution&quot;:{&quot;username&quot;:&quot;Foo&quot;,&quot;avatar&quot;:&quot;Foo.png&quot;}}"><a href="File:Foobar.mov"><img resource="./File:Foobar.mov" src="//example.com/images/a/a3/Foobar.mov" height="480" width="640"></a></span>
+</p>
+!! end
+
+!! test
+Block video
+!! options
+parsoid
+!! input
+[[File:Foobar.mov|thumb]]
+!! result
+<figure class="mw-default-size" typeof="mw:Video/Thumb" data-mw="{&quot;attribution&quot;:{&quot;username&quot;:&quot;Foo&quot;,&quot;avatar&quot;:&quot;Foo.png&quot;}}"><a href="File:Foobar.mov"><img resource="./File:Foobar.mov" src="//example.com/images/a/a3/Foobar.mov" height="135" width="180"></a></figure>
+!! end
 
 ###
 ### Subpages
